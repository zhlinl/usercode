process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

import RecoTracker.TrackProducer.TrackRefitters_cff
process.TrackRefitter1 = RecoTracker.TrackProducer.TrackRefitter_cfi.TrackRefitter.clone()
process.TrackRefitter1.src = '<SKIM>'

# parameters for alignmentHitFilter
process.TrackerTrackHitFilter.src = 'TrackRefitter1'
process.TrackerTrackHitFilter.commands = cms.vstring("keep PXB","keep PXE","keep TIB","keep TID","keep TOB","keep TEC")
process.TrackerTrackHitFilter.minimumHits = 6
process.TrackerTrackHitFilter.replaceWithInactiveHits = True
process.TrackerTrackHitFilter.stripAllInvalidHits = False
process.TrackerTrackHitFilter.rejectBadStoNHits = True
process.TrackerTrackHitFilter.StoNcommands = cms.vstring("ALL 18.0")
process.TrackerTrackHitFilter.useTrajectories= True
process.TrackerTrackHitFilter.rejectLowAngleHits= True
process.TrackerTrackHitFilter.TrackAngleCut= 0.17 #~20 degrees
process.TrackerTrackHitFilter.usePixelQualityFlag= True
# process.TrackerTrackHitFilter.PxlCorrClusterChargeCut=10000.0
##process.AlignmentHitFilter.



# track producer to be run after the alignment hit filter
import RecoTracker.TrackProducer.CTFFinalFitWithMaterial_cff
process.ctfProducerCustomised = RecoTracker.TrackProducer.CTFFinalFitWithMaterial_cff.ctfWithMaterialTracks.clone()
process.ctfProducerCustomised.src = 'TrackerTrackHitFilter'
##process.ctfProducerCustomised.beamspot='offlineBeamSpot'
process.ctfProducerCustomised.TTRHBuilder = 'WithAngleAndTemplate'
process.ctfProducerCustomised.TrajectoryInEvent = True


# parameters for TrackSelector
###process.AlignmentTrackSelector.src = '<SKIM>'
process.AlignmentTrackSelector.src = 'ctfProducerCustomised'

# track selection for sample in filename...
process.AlignmentTrackSelector.filter = True
process.AlignmentTrackSelector.applyBasicCuts = True
process.AlignmentTrackSelector.pMin    = 3.0
process.AlignmentTrackSelector.pMax    = 9999.
process.AlignmentTrackSelector.ptMin   = 2.0
process.AlignmentTrackSelector.ptMax   = 9999.
process.AlignmentTrackSelector.etaMin  = -999.
process.AlignmentTrackSelector.etaMax  = 999.
process.AlignmentTrackSelector.nHitMin = 6
process.AlignmentTrackSelector.nHitMin2D = 1
process.AlignmentTrackSelector.chi2nMax = 6.
process.AlignmentTrackSelector.applyMultiplicityFilter = True
process.AlignmentTrackSelector.maxMultiplicity = 100
process.AlignmentTrackSelector.applyNHighestPt = False
#process.AlignmentTrackSelector.nHighestPt = 1
process.AlignmentTrackSelector.seedOnlyFrom = 0 
process.AlignmentTrackSelector.applyIsolationCut = False
process.AlignmentTrackSelector.minHitIsolation = 0.8
process.AlignmentTrackSelector.applyChargeCheck = False
process.AlignmentTrackSelector.minHitChargeStrip = 50.

# Reject outliers
## include  "TrackingTools/TrackFitters/data/RungeKuttaKFFittingSmootherESProducer.cfi"
process.KFFittingSmootherWithOutliersRejectionAndRK.EstimateCut=15.0   ## If you use TrackRefitter
process.KFFittingSmootherWithOutliersRejectionAndRK.MinNumberOfHits=6

#process.AlignmentTrackSelector.minHitsPerSubDet.inTIB = 0
#process.AlignmentTrackSelector.minHitsPerSubDet.inTOB = 0
#process.AlignmentTrackSelector.minHitsPerSubDet.inBPIX = 2
#process.AlignmentTrackSelector.minHitsPerSubDet.inFPIX = 1
#process.AlignmentTrackSelector.minHitsPerSubDet.inPIXEL = 2


#process.doConstraint=cms.EDProducer("BeamSpotConstraintProducer")
process.doConstraint=cms.EDProducer("VertexConstraintProducer")
process.doConstraint.srcTrk=cms.InputTag('AlignmentTrackSelector')
process.doConstraint.srcVtx=cms.InputTag('offlinePrimaryVertices')


process.TrackRefitter2 = RecoTracker.TrackProducer.TrackRefitter_cfi.TrackRefitter.clone()
process.TrackRefitter2 = process.TrackRefitter1.clone()
process.TrackRefitter2.src = 'AlignmentTrackSelector'
process.TrackRefitter2.TrajectoryInEvent = True
process.TrackRefitter2.TTRHBuilder = "WithAngleAndTemplate"

if 'MBVertex'=='<FLAG>':
    process.TrackRefitter2.constraint = cms.string('vertex')
    process.TrackRefitter2.srcConstr  = cms.InputTag('doConstraint')
