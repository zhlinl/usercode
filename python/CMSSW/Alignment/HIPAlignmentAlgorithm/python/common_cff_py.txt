from CondCore.DBCommon.CondDBSetup_cfi import *

# loading magnetic field and geometry
# process.load("MagneticField.Engine.uniformMagneticField_cfi")
process.load("Geometry.CMSCommonData.cmsIdealGeometryXML_cfi")
process.load("Geometry.TrackerNumberingBuilder.trackerNumberingGeometry_cfi")
process.load("Configuration.StandardSequences.GeometryIdeal_cff")

# loading the alignment producer
process.load("Alignment.CommonAlignmentProducer.AlignmentProducer_cff")

# loading DB constants 
# *WARNING* - the standard file doesn't work (gives too many "SiStripPedestalsFakeSource" rcds) 
# comment out that line in standard file ... an example is given in release of HIPAlignmentAlgorithm ("FrontierConditions_GlobalTag_cff.py")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")

if 'COSMICS'=='<FLAG>':
   process.GlobalTag.globaltag='GR10_P_V2COS::All' 
else :
   process.GlobalTag.globaltag = 'GR10_P_V4::All'

process.GlobalTag.connect="frontier://FrontierProd/CMS_COND_31X_GLOBALTAG"

process.load("FWCore.MessageService.MessageLogger_cfi")
MessageLogger = cms.Service("MessageLogger",
							cout = cms.untracked.PSet(
													  threshold = cms.untracked.string('WARNING')
													  ),
							destinations = cms.untracked.vstring('cout')
)
process.MessageLogger.cerr.FwkReport.reportEvery = 10000

# configure magnetic field
process.load("Configuration.StandardSequences.MagneticField_38T_cff")

# configure the database file - use survey one for default
from CondCore.DBCommon.CondDBSetup_cfi import *


#### for CRAFT10 geometry
#### examples of other default geometries can be found in previous revisions on CVS
process.trackerAlignment = cms.ESSource("PoolDBESSource",
                                        CondDBSetup,
                                        timetype = cms.string('runnumber'),
                                        toGet = cms.VPSet(cms.PSet(
                                                record = cms.string('TrackerAlignmentRcd'),
                                                tag = cms.string('Alignments')
                                                )),

					connect = cms.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN/data/commonValidation/results/SYSTEMATICS_ICHEP/200um/dr_vs_r_RADIAL/ICHEP2010_radial_MPcosmics_realigned.db')

                                        )



process.es_prefer_trackerAlignment = cms.ESPrefer("PoolDBESSource", "trackerAlignment")




########### Load APE separately
####### CRAFT10 APE
process.trackerAPE = cms.ESSource("PoolDBESSource",CondDBSetup,
		                  connect = cms.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN/PayLoads/CRAFT09/TrackerAlignmentErr_2009_v2_prompt/131425-infty/TrackerAlignmentErr_2009_v2_prompt.db'),

                                  timetype = cms.string("runnumber"),
                                  toGet = cms.VPSet(
                                        cms.PSet(record = cms.string('TrackerAlignmentErrorRcd'),
                                                 tag = cms.string('AlignmentErrors')
                                                ))
                                        )
process.es_prefer_TrackerAPE = cms.ESPrefer("PoolDBESSource", "trackerAPE")


process.AlignmentProducer.applyDbAlignment = True


### Set parameters to align
process.AlignmentProducer.ParameterBuilder.Selector.alignParams = ['AllDets,111111']

